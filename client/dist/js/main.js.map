{"version":3,"sources":["webpack:///./client/src/js/components/Game.jsx","webpack:///./client/src/js/reducers/index.js","webpack:///./client/src/scss/main.scss?6930","webpack:///./client/src/js/actions/gameActions.js","webpack:///./client/src/js/boot/index.jsx","webpack:///./client/src/js/components/layout/TextBox.jsx","webpack:///./client/src/js/components/layout/ViewBox.jsx","webpack:///./client/src/js/graphql/readAdventure.js","webpack:///./client/src/js/reducers/gameReducer.js","webpack:///./client/src/js/actions/ActionTypes.js"],"names":["Game","page","props","data","readAdventurePages","undefined","edges","node","mapStateToProps","state","current","game","propTypes","PropTypes","shape","loading","bool","error","object","isRequired","compose","connect","graphql","options","variables","id","reducers","client","combineReducers","reducer","goTo","type","ActionType","GO_TO","payload","container","document","querySelector","networkInterface","createNetworkInterface","uri","dataset","apiUrl","opts","credentials","reduxRootSelector","composedMiddleware","applyMiddleware","middleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","allReducers","ReactDom","render","TextBox","choices","Choices","console","log","length","Content","choice","ID","dispatch","GoTo","map","renderChoices","defaultProps","string","array","func","ViewBox","defaultState","action","ActionTypes","FETCH_DATA_LOADING","FETCH_DATA_SUCCESS","FETCH_DATA_ERROR"],"mappings":"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","file":"js/main.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  graphql,\n  compose,\n} from 'react-apollo';\nimport { connect } from 'react-redux';\n\nimport readAdventure from 'graphql/readAdventure';\nimport ViewBox from 'components/layout/ViewBox';\nimport TextBox from 'components/layout/TextBox';\n\nclass Game extends Component {\n  render() {\n    let page;\n    if (this.props.data.readAdventurePages !== undefined) {\n      page = this.props.data.readAdventurePages.edges[0].node;\n    }\n\n    return (\n      <div className=\"app\">\n        <ViewBox page={page} />\n        <TextBox page={page} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    current: state.game.current,\n  };\n}\n\n\nGame.propTypes = {\n  data: PropTypes.shape({\n    loading: PropTypes.bool,\n    error: PropTypes.object,\n    readAdventurePages: PropTypes.object,\n  }).isRequired,\n};\n\n\nexport default compose(\n  connect(mapStateToProps),\n  graphql(readAdventure, {\n    options: ({ current }) => ({\n      variables: {\n        id: current,\n      },\n    }),\n  }),\n)(Game);\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/js/components/Game.jsx","import {\n  combineReducers,\n} from 'redux';\n\nimport gameReducer from 'reducers/gameReducer';\n\nexport default function reducers(client) {\n  return combineReducers({\n    game: gameReducer,\n    client: client.reducer(),\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/js/reducers/index.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/scss/main.scss\n// module id = 134\n// module chunks = 0","import ActionType from 'actions/ActionTypes';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function goTo(page) {\n  return {\n    type: ActionType.GO_TO,\n    payload: page,\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/js/actions/gameActions.js","/* global window, document */\nimport React from 'react';\nimport ReactDom from 'react-dom';\n\nimport {\n  createStore,\n  applyMiddleware,\n  compose,\n} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport ApolloClient, { createNetworkInterface } from 'apollo-client';\nimport { ApolloProvider } from 'react-apollo';\n\nimport allReducers from 'reducers';\nimport Game from 'components/Game';\n\n// eslint-disable-next-line import/no-unresolved, import/no-extraneous-dependencies\nimport 'main.scss';\n\n// only the first container is used, can change to querySelectorAll() for multiple instances\nconst container = document.querySelector('.adventure_game');\n\nconst client = new ApolloClient({\n  networkInterface: createNetworkInterface({\n    uri: container.dataset.apiUrl,\n    opts: {\n      credentials: 'same-origin',\n    },\n  }),\n  reduxRootSelector: state => state.client,\n});\n\nfunction composedMiddleware() {\n  return compose(\n    applyMiddleware(client.middleware(), thunk),\n    // eslint-disable-next-line no-underscore-dangle\n    (typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined') ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n  );\n}\n\nconst store = createStore(allReducers(client), composedMiddleware());\n\nReactDom.render(\n  <ApolloProvider store={store} client={client}>\n    <Game />\n  </ApolloProvider>\n  , container);\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/js/boot/index.jsx","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { goTo } from 'actions/gameActions';\n\nclass TextBox extends Component {\n  renderChoices() {\n    const choices = this.props.page.Choices.edges;\n    console.log(choices);\n    if (choices.length === 1 && (\n      choices[0].node.Content === undefined ||\n        choices[0].node.Content === null ||\n        choices[0].node.Content === '')) {\n\n      const choice = choices[0];\n      return (\n        <li\n          key={choice.node.ID}\n          onClick={() => { this.props.dispatch(goTo(choice.node.GoTo.ID)); }}\n        >Continue...</li>\n      );\n    }\n\n    return choices.map(choice => (\n      <li\n        key={choice.node.ID}\n        onClick={() => { this.props.dispatch(goTo(choice.node.GoTo.ID)); }}\n      >{choice.node.Content}</li>\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"text-box\">\n        <div className=\"content\">\n          {this.props.page.Content}\n        </div>\n        <ul className=\"choices\">\n          {this.renderChoices()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nTextBox.defaultProps = {\n  page: {\n    Content: '',\n    Choices: {\n      edges: [],\n    },\n  },\n};\n\nTextBox.propTypes = {\n  page: PropTypes.shape({\n    Content: PropTypes.string,\n    Choices: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect()(TextBox);\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/js/components/layout/TextBox.jsx","import React, { Component } from 'react';\n\nclass ViewBox extends Component {\n  render() {\n    return (\n      <div className=\"view-box\">\n        {}\n      </div>\n    );\n  }\n}\n\nexport default ViewBox;\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/js/components/layout/ViewBox.jsx","import gql from 'graphql-tag';\n\nexport default gql`\n  query($id: Int!) {\n    readAdventurePages(ID: $id) {\n       edges {\n         node {\n           ID,\n           Content,\n           Choices {\n             edges {\n               node {\n                 ID,\n                 Content,\n                 GoTo {\n                   ID\n                 }\n               }\n             }\n           }\n         }\n       }\n     }\n   }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/js/graphql/readAdventure.js","import ActionType from 'actions/ActionTypes';\n\nconst defaultState = {\n  current: 1,\n};\n\nexport default function reducer(state = defaultState, action) {\n  switch (action.type) {\n    case ActionType.GO_TO:\n      return {\n        ...state,\n        current: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/js/reducers/gameReducer.js","/*\n * List of action types.\n * Could just be strings, but I feel better when referencing a constant that doesn't change.\n */\nconst ActionTypes = {\n  // Data fetching\n  FETCH_DATA_LOADING: 'FETCH_DATA_LOADING',\n  FETCH_DATA_SUCCESS: 'FETCH_DATA_SUCCESS',\n  FETCH_DATA_ERROR: 'FETCH_DATA_ERROR',\n\n  // Game\n  GO_TO: 'GO_TO',\n};\n\nexport default ActionTypes;\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/js/actions/ActionTypes.js"],"sourceRoot":""}